// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthComponent 1`] = `
<div>
  <header
    className="App-header"
  >
    <img
      alt="logo"
      className="App-logo"
      src="logo.png"
    />
    <h1
      className="App-title"
    >
      Lumi
    </h1>
  </header>
  <FirebaseAuth
    firebaseAuth={undefined}
    uiConfig={Object {}}
  />
</div>
`;

exports[`BootstrapStyleComponent 1`] = `
<link
  crossOrigin="anonymous"
  href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
  integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"
  rel="stylesheet"
/>
`;

exports[`GroupCreateComponent 1`] = `
<div>
  <h2>
    Create New Group
  </h2>
  <form>
    <div
      className="form-group has-feedback"
    >
      <label
        className="control-label"
        htmlFor="formGroupNewGroup"
      >
        Choose a group name for your new group
      </label>
      <input
        className="form-control"
        id="formGroupNewGroup"
        onChange={[Function]}
        placeholder="Enter new group name"
        type="text"
        value=""
      />
      <span
        className="help-block"
      >
        Lumi will generate a Group ID to share with family and friends on the next page
      </span>
    </div>
    <button
      className="btn btn-lg btn-primary btn-block"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Create Group
    </button>
  </form>
</div>
`;

exports[`GroupJoinComponent 1`] = `
<div>
  <h2>
    Join Existing Group
  </h2>
  <form>
    <div
      className="form-group has-feedback"
    >
      <label
        className="control-label"
        htmlFor="formGroupJoinGroup"
      >
        Join an existing Lumi Group
      </label>
      <input
        className="form-control"
        id="formGroupJoinGroup"
        onChange={[Function]}
        placeholder="Enter Lumi Group ID"
        type="text"
        value=""
      />
      <span
        className="help-block"
      >
        This ID must be a valid group ID of an existing Lumi Group
      </span>
    </div>
    <button
      className="btn btn-lg btn-default btn-block"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Join Group
    </button>
  </form>
</div>
`;

exports[`HomeComponent 1`] = `null`;

exports[`NavBottomComponent 1`] = `
<nav
  className="nav-bottom navbar navbar-default navbar-fixed-bottom"
>
  <div
    className="container"
  >
    <div
      className="sc-bdVaJa cNkfwA"
    >
      <ul
        className="nav navbar-nav"
        role={null}
      >
        <li
          className="nav-bottom-item"
          role="presentation"
          style={undefined}
        >
          <a
            href="#"
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
          >
            <div
              className="sc-bdVaJa djJVkl"
            >
              <svg
                fill="currentColor"
                height={24}
                preserveAspectRatio="xMidYMid meet"
                style={
                  Object {
                    "color": undefined,
                    "verticalAlign": "middle",
                  }
                }
                viewBox="0 0 40 40"
                width={24}
              >
                <g>
                  <path
                    d="m16.6 33.4h-8.2v-13.4h-5l16.6-15 16.6 15h-5v13.4h-8.2v-10h-6.8v10z"
                  />
                </g>
              </svg>
              <div
                className="nav-bottom-text"
              >
                Timeline
              </div>
            </div>
          </a>
        </li>
        <li
          className="nav-bottom-item"
          role="presentation"
          style={undefined}
        >
          <a
            href="#"
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
          >
            <div
              className="sc-bdVaJa djJVkl"
            >
              <svg
                fill="currentColor"
                height={24}
                preserveAspectRatio="xMidYMid meet"
                style={
                  Object {
                    "color": undefined,
                    "verticalAlign": "middle",
                  }
                }
                viewBox="0 0 40 40"
                width={24}
              >
                <g>
                  <path
                    d="m31.6 21.6h-10v10h-3.2v-10h-10v-3.2h10v-10h3.2v10h10v3.2z"
                  />
                </g>
              </svg>
              <div
                className="nav-bottom-text"
              >
                Add Memory
              </div>
            </div>
          </a>
        </li>
        <li
          className="nav-bottom-item"
          role="presentation"
          style={undefined}
        >
          <a
            href="#"
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
          >
            <div
              className="sc-bdVaJa djJVkl"
            >
              <svg
                fill="currentColor"
                height={24}
                preserveAspectRatio="xMidYMid meet"
                style={
                  Object {
                    "color": undefined,
                    "verticalAlign": "middle",
                  }
                }
                viewBox="0 0 40 40"
                width={24}
              >
                <g>
                  <path
                    d="m13.5 32.5v-25h5v25h-5z m-7.5 0v-7.5h5v7.5h-5z m15 0v-12.5h5v12.5h-5z m7.5 0v-17.5h5v17.5h-5z"
                  />
                </g>
              </svg>
              <div
                className="nav-bottom-text"
              >
                Summary
              </div>
            </div>
          </a>
        </li>
      </ul>
    </div>
  </div>
</nav>
`;

exports[`NavTopComponent 1`] = `
<div
  className="nav-top"
>
  <nav
    className="navbar navbar-default navbar-fixed-top"
  >
    <div
      className="container"
    >
      <div
        className="navbar-header"
      >
        <a
          className="navbar-brand"
          href="/"
        >
          <div
            className="button-text-accent"
          >
            <b>
              Lumi
            </b>
          </div>
        </a>
        <button
          className="navbar-toggle collapsed"
          onClick={[Function]}
          type="button"
        >
          <span
            className="sr-only"
          >
            Toggle navigation
          </span>
          <span
            className="icon-bar"
          />
          <span
            className="icon-bar"
          />
          <span
            className="icon-bar"
          />
        </button>
      </div>
      <div
        aria-expanded={null}
        className="navbar-collapse collapse"
      >
        <ul
          className="nav navbar-nav navbar-right"
          role={null}
        >
          <li
            className=""
            role="presentation"
            style={undefined}
          >
            <a
              href="#"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="button"
            >
              Sign Out
            </a>
          </li>
        </ul>
        <p
          className="navbar-text navbar-right"
        />
      </div>
    </div>
  </nav>
</div>
`;

exports[`NewUserComponent 1`] = `
<div>
  <h1>
    Welcome to Lumi, !
  </h1>
  Before we begin, you must either create or join a Lumi Group.
  <Connect(GroupCreateComponent) />
  <br />
  Or
  <br />
  <Connect(GroupJoinComponent) />
</div>
`;

exports[`RootComponent 1`] = `null`;

exports[`SummaryBasicInfoComponent 1`] = `
<Table
  bordered={true}
  bsClass="table"
  condensed={false}
  hover={true}
  responsive={false}
  striped={false}
>
  <thead>
    <tr>
      <th
        className="product-table-header"
      >
        Field
      </th>
      <th
        className="product-table-header"
      >
        Value
      </th>
      <th
        className="product-table-header"
      >
        Options
      </th>
    </tr>
  </thead>
  <tbody>
    <Connect(SummaryEditWrapperComponent)
      fieldId="firstName"
      formFieldGenerator={[Function]}
      title="First Name"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="lastName"
      formFieldGenerator={[Function]}
      title="Last Name"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="birthday"
      formFieldGenerator={[Function]}
      isDateField={true}
      title="Birthday"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="gender"
      formFieldGenerator={[Function]}
      title="Gender"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="email"
      formFieldGenerator={[Function]}
      title="Email"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="address"
      formFieldGenerator={[Function]}
      title="Address"
    />
  </tbody>
</Table>
`;

exports[`SummaryCareInfoComponent 1`] = `
<Table
  bordered={true}
  bsClass="table"
  condensed={false}
  hover={true}
  responsive={false}
  striped={false}
>
  <thead>
    <tr>
      <th
        className="product-table-header"
      >
        Field
      </th>
      <th
        className="product-table-header"
      >
        Value
      </th>
      <th
        className="product-table-header"
      >
        Options
      </th>
    </tr>
  </thead>
  <tbody>
    <Connect(SummaryEditWrapperComponent)
      fieldId="needsAndPreferences"
      formFieldGenerator={[Function]}
      title="Needs and Preferences"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="thingsThatDelight"
      formFieldGenerator={[Function]}
      title="Things that Delight"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="placesOfInterest"
      formFieldGenerator={[Function]}
      title="Places of Interest"
    />
  </tbody>
</Table>
`;

exports[`SummaryComponent 1`] = `null`;

exports[`SummaryEditWrapperComponent 1`] = `
<tr>
  <td>
    
  </td>
  <td
    className="multiline"
  >
    
  </td>
  <td>
    <button
      className="btn btn-default"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      <span
        className="button-icon glyphicon glyphicon-pencil"
      />
      Edit
    </button>
  </td>
</tr>
`;

exports[`SummaryMedicalInfoComponent 1`] = `
<Table
  bordered={true}
  bsClass="table"
  condensed={false}
  hover={true}
  responsive={false}
  striped={false}
>
  <thead>
    <tr>
      <th
        className="product-table-header"
      >
        Field
      </th>
      <th
        className="product-table-header"
      >
        Value
      </th>
      <th
        className="product-table-header"
      >
        Options
      </th>
    </tr>
  </thead>
  <tbody>
    <Connect(SummaryEditWrapperComponent)
      fieldId="typeOfDementia"
      formFieldGenerator={[Function]}
      title="Type of Dementia"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="dateOfDiagnosis"
      formFieldGenerator={[Function]}
      isDateField={true}
      title="Date of Diagnosis"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="medications"
      formFieldGenerator={[Function]}
      title="Medications"
    />
    <Connect(SummaryEditWrapperComponent)
      fieldId="providers"
      formFieldGenerator={[Function]}
      title="Providers"
    />
  </tbody>
</Table>
`;

exports[`SummaryNewMemberComponent 1`] = `
<div
  className="sc-bdVaJa djJVkl"
>
  <h2>
    Please share details about the new member :)
  </h2>
  <table
    className="table"
  >
    <tbody>
      <tr>
        <td>
          First Name
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Last Name
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Birthday
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Gender
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Email
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Address
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Type of Dementia
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Date of Diagnosis
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Medications
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Providers
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Needs and Preferences
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Things that Delight
        </td>
        <td>
          <div />
        </td>
      </tr>
      <tr>
        <td>
          Places of Interest
        </td>
        <td>
          <div />
        </td>
      </tr>
    </tbody>
  </table>
  <div
    className="sc-bdVaJa cXgeQK"
  >
    <div
      className="btn-toolbar"
      role="toolbar"
    >
      <button
        className="btn btn-primary"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Save
      </button>
      <button
        className="btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </div>
</div>
`;

exports[`SummaryNewMemberFormFieldComponent 1`] = `
<tr>
  <td>
    
  </td>
  <td>
    <div />
  </td>
</tr>
`;

exports[`SummarySelectCareRecipientComponent 1`] = `
<div
  className="sc-bdVaJa hgkmdP"
>
  <h2>
    Welcome to Summary! Please choose a care recipient:
  </h2>
  <div
    className="form-group"
  >
    <select
      className="form-control"
      id="userList"
      onChange={[Function]}
      placeholder="Select a care recipient"
      type={undefined}
      value=""
    />
  </div>
  <button
    className="btn btn-primary"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Select
  </button>
</div>
`;

exports[`TimelineComponent 1`] = `
<div>
  <Connect(TimelineFiltersComponent) />
  <Table
    bordered={false}
    bsClass="table"
    condensed={false}
    hover={false}
    responsive={false}
    striped={false}
  >
    <tbody>
      
    </tbody>
  </Table>
</div>
`;

exports[`TimelineStoryContentComponent 1`] = `
<Styled(Component)
  alignItems="flex-start"
  display="flex"
  element="div"
  flexDirection="column"
>
  <div
    className="timeline-story-padding"
  />
  <Image
    bsClass="img"
    circle={false}
    className="timeline-story-content-image"
    responsive={true}
    rounded={false}
    src=""
    thumbnail={false}
  />
</Styled(Component)>
`;

exports[`TimelineStoryHeaderComponent 1`] = `
<Styled(Component)
  alignItems="center"
  className="timeline-story-padding"
  display="flex"
  element="div"
>
  <Image
    bsClass="img"
    circle={true}
    className="timeline-story-header-profile-image"
    responsive={false}
    rounded={false}
    src={undefined}
    thumbnail={false}
  />
  <span
    className="space-horizontal"
  />
  <Styled(Component)
    display="flex"
    element="div"
    flexDirection="column"
  >
    <div>
      undefined undefined
       • 
    </div>
    <Styled(Component)
      display="flex"
      element="div"
    >
      <div />
    </Styled(Component)>
  </Styled(Component)>
</Styled(Component)>
`;
